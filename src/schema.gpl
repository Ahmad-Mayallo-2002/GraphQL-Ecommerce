# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthType {
  id: String!
  role: Role!
  token: String!
}

input CreateOrderInput {
  address: String!
  items: [CreateOrderItemInput!]!
  payment: Payment!
  status: OrderStatus!
  totalPrice: Float! = 0
}

input CreateOrderItemInput {
  productId: String!
  quantity: Float!
}

input CreateProductInput {
  category: String!
  description: String!
  image: String! = ""
  price: Float! = 0
  stock: Int! = 1
  title: String!
}

input CreateUserInput {
  email: String!
  password: String!
  role: Role! = USER
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createOrder(input: CreateOrderInput!): Order!
  createProduct(image: Upload!, input: CreateProductInput!): Product!
  deleteProduct(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  enterCompareCode(sendedCode: String!, writtenCode: String!): Boolean!
  login(input: LoginInput!): AuthType!
  removeOrder(id: String!): Boolean!
  sendCodePassword(email: String!): String!
  signUp(input: CreateUserInput!): User!
  updateOrderStatus(id: String!, status: OrderStatus!): Boolean!
  updatePassword(confirmNewPassword: String!, email: String!, newPassword: String!): Boolean!
  updateProduct(id: String!, input: UpdateProductInput!): Boolean!
  updateUser(input: UpdateUserInput!): Boolean!
}

type Order {
  address: String!
  created_at: DateTime!
  id: String!
  items: [OrderItem!]!
  payment: Payment!
  status: OrderStatus!
  totalPrice: Float!
  updated_at: DateTime!
  user: User!
}

type OrderItem {
  created_at: DateTime!
  order: Order!
  price: Float!
  product: Product!
  quantity: Float!
  updated_at: DateTime!
}

"""Enum to show Order Status pending or shipped, etc."""
enum OrderStatus {
  CANCELLED
  DELIVERED
  PENDING
  SHIPPED
}

"""This is Enum for Payment Method Cash or Credit or Paypal"""
enum Payment {
  CASH
  CREDIT_CARD
  PAYPAL
}

type Product {
  category: String!
  created_at: DateTime!
  description: String!
  id: String!
  image: String!
  price: Float!
  stock: Float!
  title: String!
  updated_at: DateTime!
}

type Query {
  getByUserId(userId: String!): [Order!]!
  getOrder(id: String!): Order!
  getOrders: [Order!]!
  getProduct(id: String!): Product!
  getProducts: [Product!]!
  getProductsByCategory(category: String!): [Product!]!
  getUser: User!
  getUsers: [User!]!
}

"""This is Role Enum User or Admin"""
enum Role {
  ADMIN
  USER
}

input UpdateProductInput {
  category: String
  description: String
  image: String = ""
  price: Float = 0
  stock: Int = 1
  title: String
}

input UpdateUserInput {
  email: String
  password: String
  role: Role = USER
  username: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  created_at: DateTime!
  email: String!
  id: String!
  orders: [Order!]!
  password: String!
  role: Role!
  updated_at: DateTime!
  username: String!
}